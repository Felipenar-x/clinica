/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.20
 * Generated at: 2025-05-20 20:48:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import com.mack.clinica.model.ConsultaDAO;

public final class consultar_005fagenda_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mack.clinica.model.ConsultaDAO");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    List<ConsultaDAO.Consulta> consultas = (List<ConsultaDAO.Consulta>) request.getAttribute("consultas");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"pt-BR\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Consultar Agenda</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .filtro-form { margin-bottom: 20px; }\r\n");
      out.write("        table { width: 100%; border-collapse: collapse; }\r\n");
      out.write("        th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }\r\n");
      out.write("        th { background: #f0f0f0; }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"navbar\">\r\n");
      out.write("        <div class=\"nav-links\">\r\n");
      out.write("            <a href=\"admin_dashboard\">Home</a>\r\n");
      out.write("            <a href=\"pacientes\">Cadastro de Pacientes</a>\r\n");
      out.write("            <a href=\"medicos\">Cadastro de Médicos</a>\r\n");
      out.write("            <a href=\"consultar_agenda\">Consultar Agenda</a>\r\n");
      out.write("            <a href=\"#\">Ficha Clínica</a>\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout\" class=\"logout-link\">Logout</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"content\">\r\n");
      out.write("        <h1>Consultar Agenda</h1>\r\n");
      out.write("        <form method=\"get\" class=\"filtro-form\">\r\n");
      out.write("            <label>Paciente: <input type=\"text\" name=\"paciente\" value=\"");
      out.print( request.getParameter("paciente") != null ? request.getParameter("paciente") : "" );
      out.write("\" /></label>\r\n");
      out.write("            <label>Médico: <input type=\"text\" name=\"medico\" value=\"");
      out.print( request.getParameter("medico") != null ? request.getParameter("medico") : "" );
      out.write("\" /></label>\r\n");
      out.write("            <label>Data: <input type=\"date\" name=\"data\" value=\"");
      out.print( request.getParameter("data") != null ? request.getParameter("data") : "" );
      out.write("\" /></label>\r\n");
      out.write("            <button type=\"submit\">Filtrar</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>ID</th>\r\n");
      out.write("                <th>Paciente</th>\r\n");
      out.write("                <th>Médico</th>\r\n");
      out.write("                <th>Data/Hora</th>\r\n");
      out.write("                <th>Status</th>\r\n");
      out.write("                <th>Observações</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
 if (consultas != null && !consultas.isEmpty()) {
                for (ConsultaDAO.Consulta c : consultas) { 
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print( c.getId() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( c.getPacienteNome() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( c.getMedicoNome() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( c.getDataHora() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( c.getStatus() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( c.getObservacoes() );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
   }
               } else { 
      out.write("\r\n");
      out.write("            <tr><td colspan=\"6\">Nenhuma consulta encontrada.</td></tr>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
